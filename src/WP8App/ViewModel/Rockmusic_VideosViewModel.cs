// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls=WPAppStudio.Controls;
using Entities=WPAppStudio.Entities;
using EntitiesBase=WPAppStudio.Entities.Base;
using IServices=WPAppStudio.Services.Interfaces;
using IViewModels=WPAppStudio.ViewModel.Interfaces;
using Localization=WPAppStudio.Localization;
using Repositories=WPAppStudio.Repositories;
using Services=WPAppStudio.Services;
using ViewModelsBase=WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of Rockmusic_Videos ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class Rockmusic_VideosViewModel : ViewModelsBase.VMBase, IViewModels.IRockmusic_VideosViewModel
    {       

		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ILockScreenService _lockScreenService;
		private readonly Repositories.IRockmusic_OneMoreNight _rockmusic_OneMoreNight;
		private readonly IServices.IInternetService _internetService;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="Rockmusic_VideosViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="lockScreenService">The Lock Screen Service.</param>
        /// <param name="rockmusic_OneMoreNight">The Rockmusic_ One More Night.</param>
        /// <param name="internetService">The Internet Service.</param>
        public Rockmusic_VideosViewModel(IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ILockScreenService lockScreenService, Repositories.IRockmusic_OneMoreNight rockmusic_OneMoreNight, IServices.IInternetService internetService)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_lockScreenService = lockScreenService;
			_rockmusic_OneMoreNight = rockmusic_OneMoreNight;
			_internetService = internetService;
        }
		
	    /// <summary>
        /// IsInternetAvalaible property.
        /// </summary>		
        public Visibility IsInternetAvalaible
        {
	      get
          {
				return _internetService.IsNetworkAvailable() ? Visibility.Collapsed : Visibility.Visible; 
           }
		}
	
		private ObservableCollection<EntitiesBase.YouTubeVideo> _rockmusic_VideosListControlCollection;

        /// <summary>
        /// Rockmusic_VideosListControlCollection property.
        /// </summary>		
        public ObservableCollection<EntitiesBase.YouTubeVideo> Rockmusic_VideosListControlCollection
        {
            get
            {
				
                if(_rockmusic_VideosListControlCollection == null)
					GetRockmusic_VideosListControlCollectionData();
				return _rockmusic_VideosListControlCollection;     
            }
            set
            {
                SetProperty(ref _rockmusic_VideosListControlCollection, value);
            }
        }
	
		private int _rockmusic_VideosListControlCollectionPageNumber;

        /// <summary>
        /// Rockmusic_VideosListControlCollectionPageNumber property.
        /// </summary>		
        public int Rockmusic_VideosListControlCollectionPageNumber
        {
            get
            {
				return _rockmusic_VideosListControlCollectionPageNumber;
            }
            set
            {
                SetProperty(ref _rockmusic_VideosListControlCollectionPageNumber, value);
            }
        }
	
		private EntitiesBase.YouTubeVideo _selectedRockmusic_VideosListControlCollection;

        /// <summary>
        /// SelectedRockmusic_VideosListControlCollection property.
        /// </summary>		
        public EntitiesBase.YouTubeVideo SelectedRockmusic_VideosListControlCollection
        {
            get
            {
				return _selectedRockmusic_VideosListControlCollection;
            }
            set
            {
                _selectedRockmusic_VideosListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.IRockmusic_DetailVideosViewModel>(_selectedRockmusic_VideosListControlCollection);
            }
        }
	
		private Controls.MenuItemData _selectedMenuSection_MenuMenuControl;

        /// <summary>
        /// SelectedMenuSection_MenuMenuControl property.
        /// </summary>		
        public Controls.MenuItemData SelectedMenuSection_MenuMenuControl
        {
            get
            {
				return _selectedMenuSection_MenuMenuControl;
            }
            set
            {
                _selectedMenuSection_MenuMenuControl = value;
                if (value != null)
                    _navigationService.NavigateTo(value);
            }
        }

        /// <summary>
        /// Delegate method for the RefreshRockmusic_VideosListControlCollectionCommand command.
        /// </summary>
        public async void RefreshRockmusic_VideosListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingRockmusic_VideosListControlCollection = true;
				var items = await  _rockmusic_OneMoreNight.Refresh();
				Rockmusic_VideosListControlCollection = items;
				Rockmusic_VideosListControlCollectionPageNumber = 0;
			}
            catch (Exception ex)
            {
				Rockmusic_VideosListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.youtubeError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingRockmusic_VideosListControlCollection = false;
			}
        }
		
		
        private bool _loadingRockmusic_VideosListControlCollection;
		
        public bool LoadingRockmusic_VideosListControlCollection
        {
            get { return _loadingRockmusic_VideosListControlCollection; }
            set { SetProperty(ref _loadingRockmusic_VideosListControlCollection, value); }
        }

        private ICommand _refreshRockmusic_VideosListControlCollectionCommand;

        /// <summary>
        /// Gets the RefreshRockmusic_VideosListControlCollectionCommand command.
        /// </summary>
        public ICommand RefreshRockmusic_VideosListControlCollectionCommand
        {
            get { return _refreshRockmusic_VideosListControlCollectionCommand = _refreshRockmusic_VideosListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(RefreshRockmusic_VideosListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GetRockmusic_VideosListControlCollectionCommand command.
        /// </summary>
        public  void GetRockmusic_VideosListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetRockmusic_VideosListControlCollectionData(pageNumber);
        }
		

        private ICommand _getRockmusic_VideosListControlCollectionCommand;

        /// <summary>
        /// Gets the GetRockmusic_VideosListControlCollectionCommand command.
        /// </summary>
        public ICommand GetRockmusic_VideosListControlCollectionCommand
        {
            get { return _getRockmusic_VideosListControlCollectionCommand = _getRockmusic_VideosListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetRockmusic_VideosListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the SetLockScreenCommand command.
        /// </summary>
        public  void SetLockScreenCommandDelegate() 
        {
				_lockScreenService.SetLockScreen("LockScreen-39bfd357-011a-429d-881b-19da56381465.jpg");
        }
		

        private ICommand _setLockScreenCommand;

        /// <summary>
        /// Gets the SetLockScreenCommand command.
        /// </summary>
        public ICommand SetLockScreenCommand
        {
            get { return _setLockScreenCommand = _setLockScreenCommand ?? new ViewModelsBase.DelegateCommand(SetLockScreenCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the AboutCommand command.
        /// </summary>
        public  void AboutCommandDelegate() 
        {
				_navigationService.NavigateTo<IViewModels.IAboutViewModel>();
        }
		

        private ICommand _aboutCommand;

        /// <summary>
        /// Gets the AboutCommand command.
        /// </summary>
        public ICommand AboutCommand
        {
            get { return _aboutCommand = _aboutCommand ?? new ViewModelsBase.DelegateCommand(AboutCommandDelegate); }
        }

        private async void GetRockmusic_VideosListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingRockmusic_VideosListControlCollection = true;
				Rockmusic_VideosListControlCollectionPageNumber = pageNumber;

                if (pageNumber == 0)
				{
					var items = await _rockmusic_OneMoreNight.GetData(pageNumber);
                    Rockmusic_VideosListControlCollection = items;
				}
                else   
				{
					var items = await _rockmusic_OneMoreNight.GetData(pageNumber);
                    foreach (var item in items)                    
                        Rockmusic_VideosListControlCollection.Add(item);
				}
			}
            catch (Exception ex)
            {
				Rockmusic_VideosListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.youtubeError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingRockmusic_VideosListControlCollection = false;
			}
		}
    }
}
