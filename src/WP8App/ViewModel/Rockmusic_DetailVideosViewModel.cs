// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls=WPAppStudio.Controls;
using Entities=WPAppStudio.Entities;
using EntitiesBase=WPAppStudio.Entities.Base;
using IServices=WPAppStudio.Services.Interfaces;
using IViewModels=WPAppStudio.ViewModel.Interfaces;
using Localization=WPAppStudio.Localization;
using Repositories=WPAppStudio.Repositories;
using Services=WPAppStudio.Services;
using ViewModelsBase=WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of Rockmusic_DetailVideos ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class Rockmusic_DetailVideosViewModel : ViewModelsBase.VMBase, IViewModels.IRockmusic_DetailVideosViewModel, ViewModelsBase.INavigable
    {       

		private readonly Repositories.Rockmusic_OneMoreNight _rockmusic_OneMoreNight;
		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ISpeechService _speechService;
		private readonly IServices.IShareService _shareService;
		private readonly IServices.ILiveTileService _liveTileService;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="Rockmusic_DetailVideosViewModel" /> class.
        /// </summary>
        /// <param name="rockmusic_OneMoreNight">The Rockmusic_ One More Night.</param>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="speechService">The Speech Service.</param>
        /// <param name="shareService">The Share Service.</param>
        /// <param name="liveTileService">The Live Tile Service.</param>
        public Rockmusic_DetailVideosViewModel(Repositories.Rockmusic_OneMoreNight rockmusic_OneMoreNight, IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ISpeechService speechService, IServices.IShareService shareService, IServices.ILiveTileService liveTileService)
        {
			_rockmusic_OneMoreNight = rockmusic_OneMoreNight;
			_dialogService = dialogService;
			_navigationService = navigationService;
			_speechService = speechService;
			_shareService = shareService;
			_liveTileService = liveTileService;
        }
		
	
		private EntitiesBase.YouTubeVideo _currentYouTubeVideo;

        /// <summary>
        /// CurrentYouTubeVideo property.
        /// </summary>		
        public EntitiesBase.YouTubeVideo CurrentYouTubeVideo
        {
            get
            {
				return _currentYouTubeVideo;
            }
            set
            {
                SetProperty(ref _currentYouTubeVideo, value);
            }
        }
	
		private bool _hasNextpanoramaRockmusic_DetailVideos0;

        /// <summary>
        /// HasNextpanoramaRockmusic_DetailVideos0 property.
        /// </summary>		
        public bool HasNextpanoramaRockmusic_DetailVideos0
        {
            get
            {
				return _hasNextpanoramaRockmusic_DetailVideos0;
            }
            set
            {
                SetProperty(ref _hasNextpanoramaRockmusic_DetailVideos0, value);
            }
        }
	
		private bool _hasPreviouspanoramaRockmusic_DetailVideos0;

        /// <summary>
        /// HasPreviouspanoramaRockmusic_DetailVideos0 property.
        /// </summary>		
        public bool HasPreviouspanoramaRockmusic_DetailVideos0
        {
            get
            {
				return _hasPreviouspanoramaRockmusic_DetailVideos0;
            }
            set
            {
                SetProperty(ref _hasPreviouspanoramaRockmusic_DetailVideos0, value);
            }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechRockmusic_DetailVideosStaticControlCommand command.
        /// </summary>
        public  void TextToSpeechRockmusic_DetailVideosStaticControlCommandDelegate() 
        {
				_speechService.TextToSpeech(CurrentYouTubeVideo.Title);
        }
		

        private ICommand _textToSpeechRockmusic_DetailVideosStaticControlCommand;

        /// <summary>
        /// Gets the TextToSpeechRockmusic_DetailVideosStaticControlCommand command.
        /// </summary>
        public ICommand TextToSpeechRockmusic_DetailVideosStaticControlCommand
        {
            get { return _textToSpeechRockmusic_DetailVideosStaticControlCommand = _textToSpeechRockmusic_DetailVideosStaticControlCommand ?? new ViewModelsBase.DelegateCommand(TextToSpeechRockmusic_DetailVideosStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the ShareRockmusic_DetailVideosStaticControlCommand command.
        /// </summary>
        public  void ShareRockmusic_DetailVideosStaticControlCommandDelegate() 
        {
				_shareService.Share(CurrentYouTubeVideo.Title, "", CurrentYouTubeVideo.ExternalUrl, @"RockMusic");
        }
		

        private ICommand _shareRockmusic_DetailVideosStaticControlCommand;

        /// <summary>
        /// Gets the ShareRockmusic_DetailVideosStaticControlCommand command.
        /// </summary>
        public ICommand ShareRockmusic_DetailVideosStaticControlCommand
        {
            get { return _shareRockmusic_DetailVideosStaticControlCommand = _shareRockmusic_DetailVideosStaticControlCommand ?? new ViewModelsBase.DelegateCommand(ShareRockmusic_DetailVideosStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartRockmusic_DetailVideosStaticControlCommand command.
        /// </summary>
        public  void PinToStartRockmusic_DetailVideosStaticControlCommandDelegate() 
        {
				_liveTileService.PinToStart(typeof(IViewModels.IRockmusic_DetailVideosViewModel), CreateTileInfoRockmusic_DetailVideosStaticControl());
        }
		

        private ICommand _pinToStartRockmusic_DetailVideosStaticControlCommand;

        /// <summary>
        /// Gets the PinToStartRockmusic_DetailVideosStaticControlCommand command.
        /// </summary>
        public ICommand PinToStartRockmusic_DetailVideosStaticControlCommand
        {
            get { return _pinToStartRockmusic_DetailVideosStaticControlCommand = _pinToStartRockmusic_DetailVideosStaticControlCommand ?? new ViewModelsBase.DelegateCommand(PinToStartRockmusic_DetailVideosStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GoToSourceRockmusic_DetailVideosStaticControlCommand command.
        /// </summary>
        public  void GoToSourceRockmusic_DetailVideosStaticControlCommandDelegate() 
        {
				_navigationService.NavigateTo(string.IsNullOrEmpty(CurrentYouTubeVideo.ExternalUrl) ? null : new Uri(CurrentYouTubeVideo.ExternalUrl));
        }
		

        private ICommand _goToSourceRockmusic_DetailVideosStaticControlCommand;

        /// <summary>
        /// Gets the GoToSourceRockmusic_DetailVideosStaticControlCommand command.
        /// </summary>
        public ICommand GoToSourceRockmusic_DetailVideosStaticControlCommand
        {
            get { return _goToSourceRockmusic_DetailVideosStaticControlCommand = _goToSourceRockmusic_DetailVideosStaticControlCommand ?? new ViewModelsBase.DelegateCommand(GoToSourceRockmusic_DetailVideosStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the NextpanoramaRockmusic_DetailVideos0 command.
        /// </summary>
        public async void NextpanoramaRockmusic_DetailVideos0Delegate() 
        {
				LoadingCurrentYouTubeVideo = true;
			var next = await  _rockmusic_OneMoreNight.Next(CurrentYouTubeVideo);

			if(next != null)
				CurrentYouTubeVideo = next;

			RefreshHasPrevNext();
        }
		
		
        private bool _loadingCurrentYouTubeVideo;
		
        public bool LoadingCurrentYouTubeVideo
        {
            get { return _loadingCurrentYouTubeVideo; }
            set { SetProperty(ref _loadingCurrentYouTubeVideo, value); }
        }

        private ICommand _nextpanoramaRockmusic_DetailVideos0;

        /// <summary>
        /// Gets the NextpanoramaRockmusic_DetailVideos0 command.
        /// </summary>
        public ICommand NextpanoramaRockmusic_DetailVideos0
        {
            get { return _nextpanoramaRockmusic_DetailVideos0 = _nextpanoramaRockmusic_DetailVideos0 ?? new ViewModelsBase.DelegateCommand(NextpanoramaRockmusic_DetailVideos0Delegate); }
        }

        /// <summary>
        /// Delegate method for the PreviouspanoramaRockmusic_DetailVideos0 command.
        /// </summary>
        public  void PreviouspanoramaRockmusic_DetailVideos0Delegate() 
        {
			var prev =  _rockmusic_OneMoreNight.Previous(CurrentYouTubeVideo);

			if(prev != null)
				CurrentYouTubeVideo = prev;

			RefreshHasPrevNext();
        }
		

        private ICommand _previouspanoramaRockmusic_DetailVideos0;

        /// <summary>
        /// Gets the PreviouspanoramaRockmusic_DetailVideos0 command.
        /// </summary>
        public ICommand PreviouspanoramaRockmusic_DetailVideos0
        {
            get { return _previouspanoramaRockmusic_DetailVideos0 = _previouspanoramaRockmusic_DetailVideos0 ?? new ViewModelsBase.DelegateCommand(PreviouspanoramaRockmusic_DetailVideos0Delegate); }
        }

        private async void RefreshHasPrevNext()
        {
            HasPreviouspanoramaRockmusic_DetailVideos0 = _rockmusic_OneMoreNight.HasPrevious(CurrentYouTubeVideo);
			HasNextpanoramaRockmusic_DetailVideos0 = await _rockmusic_OneMoreNight.HasNext(CurrentYouTubeVideo);
			LoadingCurrentYouTubeVideo = false;
		}
		public object NavigationContext
        {
            set
            {              
                if (!(value is EntitiesBase.YouTubeVideo)) { return; }
                
                CurrentYouTubeVideo = value as EntitiesBase.YouTubeVideo;
                RefreshHasPrevNext();
            }
        }
        /// <summary>
        /// Initializes a <see cref="Services.TileInfo" /> object for the Rockmusic_DetailVideosStaticControl control.
        /// </summary>
		/// <returns>A <see cref="Services.TileInfo" /> object.</returns>
        public Services.TileInfo CreateTileInfoRockmusic_DetailVideosStaticControl()
        {
            var tileInfo = new Services.TileInfo
            {
                CurrentId = CurrentYouTubeVideo.VideoId,
                Title = CurrentYouTubeVideo.Title,
                BackTitle = CurrentYouTubeVideo.Title,
                BackContent = string.Empty,
                Count = 0,
                BackgroundImagePath = CurrentYouTubeVideo.VideoImageUrl,
                BackBackgroundImagePath = CurrentYouTubeVideo.VideoImageUrl,
                LogoPath = "Item-8380c321-dec0-491a-8ac2-c715b389c6ff.png"
            };
            return tileInfo;
        }
    }
}
